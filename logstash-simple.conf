input {
    kafka {
        host => "10.0.227.26"
        port => 9092
        topic => "log_rails"
        message_format => "plain"
        type => "plain"
    }
}
filter {
  grok {
    break_on_match => true
    # [ec2-....][23997]|[RAILS][2013 12 25 18:18:21.459 -0700][INFO]: GET 200 /analyze 425.79
    #Rails controller (with optional exception logging)
    pattern => "\[%{IPORHOST:src}\]::\[%{NUMBER:pid}\]\[%{DATA:appname}\]\|\[(?<application>RAILS)\]\[%{DATA:datetime}\]\[%{WORD:level}\]: %{WORD:request} %{INT:status} %{DATA:path} (?<duration>\d+(?:\.\d+)?)ms Q(?<queue >\d+(?:\.\d+)?)ms( EXCEPTION: %{DATA:exception}$)?"

    #Rails Exceptions
    pattern => "\[%{IPORHOST:src}\]::\[%{NUMBER:pid}\]\[%{DATA:appname}\]\|\[(?<application>RAILS)\]\[%{DATA:datetime}\]\[(?<level>EXCEPTION)\]: msg:%{DATA:errormsg} - inspect:%{DATA:errorobject} - backtrace:%{DATA:backtrace}$"

    #Rails catch-all
    # Params and Timings for manual analysis or map-reduce / additional parsing
    pattern => "\[%{IPORHOST:src}\]::\[%{NUMBER:pid}\]\[%{DATA:appname}\]\|\[(?<application>RAILS)\]\[%{DATA:datetime}\]\[%{WORD:level}\]: %{DATA:data}$"


    #Database queries
    pattern => "\[%{IPORHOST:src}\]::\[%{NUMBER:pid}\]\[%{DATA:appname}\]\|\[(?<application>ACTIVERECORD|MONGO)\]\[%{DATA:datetime}\]\[%{WORD:level}\]:%{DATA:query}$"






    #Unicorn
    #The first part [UNICORN][ec2-23...aws.com]:: has to be provided by the tail2kafka program  (-m flag)
    pattern => "\[(?<application>UNICORN)\]\[%{IPORHOST:src}\]::%{DATA}, \[%{DATA:datetime} #%{NUMBER:pid}\]  %{WORD:level} -- : %{DATA:data}$"
    pattern => "\[(?<application>UNICORN)\]\[%{IPORHOST:src}\]::%{DATA:data}$"  #catch all





    #nginx access log
    pattern => "\[(?<application>NGINX)\]\[%{IPORHOST:src}\]::%{IPORHOST:remote_addr} - %{USERNAME:remote_user} \[%{HTTPDATE:datetime}\] %{QS:request} %{INT:status} %{INT:body_bytes_sent} %{QS:http_referer} %{QS:http_user_agent}"


  }

  date {
    #Time formats:  
    # Rails     :   2013 12 25 18:18:21.459 -0700 
    # Unicorn   :   2013-07-02T11:18:27.455313 
    # nginx     :   08/Jul/2013:03:10:19 -0700
    match => [ "datetime", "YYY MM dd HH:mm:ss.SSS Z", "YYYY-MM-dd'T'HH:mm:ss.SSSSSS", "dd/MMM/YYYY:HH:mm:ss Z" ]

  }
}
output { 
    stdout { debug => true debug_format => "json"}
    elasticsearch { embedded => false }
}
